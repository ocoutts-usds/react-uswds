import{a as b,F as E,j as m}from"./jsx-runtime-2xDJh5tt.js";import{r as c}from"./index-CBqU2yxZ.js";import{c as q}from"./index-Bl6ORisp.js";import{T as H}from"./TextInput-gKiZgmFb.js";import{T as L}from"./Textarea-BzlnUgDN.js";const j=t=>Array.from(t).length,w=(t,u)=>{const d=`${u} characters allowed`,n="$0 characters left",r="$0 character left",i="$0 character over limit",p="$0 characters over limit",s=u-t;switch(s){case u:return d;case 1:return r.replace("$0","1");case-1:return i.replace("$0","1");default:return s>=0?n.replace("$0",s.toString()):p.replace("$0",Math.abs(s).toString())}},_=({id:t,name:u,className:d,maxLength:n,value:r="",defaultValue:i="",isTextArea:p=!1,getCharacterCount:s=j,getMessage:V=w,...$})=>{const f=s(r||i),[g,P]=c.useState(f),[I,N]=c.useState(V(f,n)),[S,R]=c.useState(f<n),h=c.useRef(null),x=q("usa-character-count__field",d),A=q("usa-hint","usa-character-count__status",{"usa-character-count__status--invalid":!S});c.useEffect(()=>{const e=V(g,n);N(e),R(g<=n);const a=setTimeout(()=>{h.current&&(h.current.textContent=e)},1e3);return()=>clearTimeout(a)},[g]);const F=(e,a)=>{const l=S?"":"The content is too long.";e.target.setCustomValidity(l),a&&a(e)},T=(e,a)=>{const{target:{value:l=""}}=e;P(s(l)),a&&a(e)};let v;if(p){const{onBlur:e,onChange:a,inputRef:l,...y}=$,C={id:t,name:u,className:x,...r?{value:r}:{defaultValue:i},onBlur:o=>F(o,e),onChange:o=>T(o,a),inputRef:l,...y};v=m(L,{...C})}else{const{onBlur:e,onChange:a,inputRef:l,type:y="text",...C}=$,o={id:t,type:y,name:u,className:x,...r?{value:r}:{defaultValue:i},onBlur:M=>F(M,e),onChange:M=>T(M,a),inputRef:l,...C};v=m(H,{...o})}return b(E,{children:[v,b("span",{className:"usa-sr-only",id:`${t}-info`,children:["You can enter up to ",n," characters"]}),m("div",{className:A,"aria-hidden":"true","data-testid":"characterCountMessage",children:I}),m("div",{ref:h,className:"usa-character-count__sr-status usa-sr-only","aria-live":"polite","data-testid":"characterCountSRMessage"})]})};try{_.displayName="CharacterCount",_.__docgenInfo={description:"",displayName:"CharacterCount",props:{id:{defaultValue:null,description:"",name:"id",required:!1,type:{name:"string"}},name:{defaultValue:null,description:"",name:"name",required:!1,type:{name:"string"}},maxLength:{defaultValue:null,description:"",name:"maxLength",required:!1,type:{name:"number"}},value:{defaultValue:{value:""},description:"",name:"value",required:!1,type:{name:"string | (string & readonly string[])"}},defaultValue:{defaultValue:{value:""},description:"",name:"defaultValue",required:!1,type:{name:"string | (string & readonly string[])"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string"}},isTextArea:{defaultValue:{value:"false"},description:"",name:"isTextArea",required:!1,type:{name:"boolean"}},getCharacterCount:{defaultValue:{value:"(text: string): number => Array.from(text).length"},description:"",name:"getCharacterCount",required:!1,type:{name:"((text: string) => number)"}},getMessage:{defaultValue:{value:`(count: number, max: number): string => {
  const emptyMessageFormat = \`\${max} characters allowed\`
  const remainingPluralFormat = '$0 characters left'
  const remainingSingularFormat = '$0 character left'
  const overSingularFormat = '$0 character over limit'
  const overPluralFormat = '$0 characters over limit'
  const remainingCount = max - count

  switch (remainingCount) {
    case max:
      return emptyMessageFormat
    case 1:
      return remainingSingularFormat.replace('$0', '1')
    case -1:
      return overSingularFormat.replace('$0', '1')
    default:
      return remainingCount >= 0
        ? remainingPluralFormat.replace('$0', remainingCount.toString())
        : overPluralFormat.replace('$0', Math.abs(remainingCount).toString())
  }
}`},description:"",name:"getMessage",required:!1,type:{name:"((remainingCount: number, max: number) => string)"}},type:{defaultValue:null,description:"",name:"type",required:!1,type:{name:"enum",value:[{value:'"number"'},{value:'"search"'},{value:'"text"'},{value:'"tel"'},{value:'"url"'},{value:'"email"'},{value:'"password"'}]}},validationStatus:{defaultValue:null,description:"",name:"validationStatus",required:!1,type:{name:"enum",value:[{value:'"success"'},{value:'"error"'}]}},inputSize:{defaultValue:null,description:"",name:"inputSize",required:!1,type:{name:"enum",value:[{value:'"medium"'},{value:'"small"'}]}},inputRef:{defaultValue:null,description:"",name:"inputRef",required:!1,type:{name:"string | ((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | ((instance: HTMLTextAreaElement | null) => void) | RefObject<...> | null"}},inputProps:{defaultValue:null,description:"",name:"inputProps",required:!1,type:{name:"DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>"}},error:{defaultValue:null,description:"",name:"error",required:!1,type:{name:"boolean"}},success:{defaultValue:null,description:"",name:"success",required:!1,type:{name:"boolean"}}}}}catch{}export{_ as C};
