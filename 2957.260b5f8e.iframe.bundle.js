"use strict";(self.webpackChunk_trussworks_react_uswds=self.webpackChunk_trussworks_react_uswds||[]).push([[2957],{"./src/components/forms/ComboBox/ComboBox.tsx":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){__webpack_require__.d(__webpack_exports__,{Ct:function(){return ComboBox},QZ:function(){return FocusMode}});var react=__webpack_require__("./node_modules/react/index.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames);let ActionTypes=function(ActionTypes){return ActionTypes[ActionTypes.SELECT_OPTION=0]="SELECT_OPTION",ActionTypes[ActionTypes.CLEAR=1]="CLEAR",ActionTypes[ActionTypes.OPEN_LIST=2]="OPEN_LIST",ActionTypes[ActionTypes.CLOSE_LIST=3]="CLOSE_LIST",ActionTypes[ActionTypes.FOCUS_OPTION=4]="FOCUS_OPTION",ActionTypes[ActionTypes.UPDATE_FILTER=5]="UPDATE_FILTER",ActionTypes[ActionTypes.BLUR=6]="BLUR",ActionTypes[ActionTypes.CLEAR_SELECTION=7]="CLEAR_SELECTION",ActionTypes[ActionTypes.FOCUS_INPUT=8]="FOCUS_INPUT",ActionTypes}({});const useComboBox=(initialState,optionsList,disableFiltering,customizableFilter)=>{const getPotentialMatches=needle=>{const regex=((filter,query="",extras={})=>{const escapeRegExp=text=>text.replace(/[-[\]{}()*+?.,\\^$|#\s]/g,"\\$&");let find=filter.replace(/{{(.*?)}}/g,((_m,$1)=>{const key=$1.trim(),queryFilter=extras[key];if("query"!==key&&queryFilter){const matcher=new RegExp(queryFilter,"i"),matches=query.match(matcher);return matches?escapeRegExp(matches[1]):""}return escapeRegExp(query)}));return find="^(?:"+find+")$",new RegExp(find,"i")})(customizableFilter.filter,needle,customizableFilter.extras),filteredOptions=optionsList.filter((option=>regex.test(option.label.toLowerCase())));return disableFiltering?{closestMatch:filteredOptions.length>0?filteredOptions[0]:optionsList[0],optionsToDisplay:optionsList}:{closestMatch:filteredOptions[0],optionsToDisplay:filteredOptions}};return(0,react.useReducer)(((state,action)=>{switch(action.type){case ActionTypes.SELECT_OPTION:return{...state,isOpen:!1,selectedOption:action.option,focusMode:FocusMode.Input,inputValue:action.option.label,filteredOptions:optionsList,focusedOption:action.option,statusText:""};case ActionTypes.UPDATE_FILTER:{const{closestMatch:closestMatch,optionsToDisplay:optionsToDisplay}=getPotentialMatches(action.value),newState={...state,isOpen:!0,filteredOptions:optionsToDisplay,inputValue:action.value,statusText:`${optionsToDisplay.length} result${optionsToDisplay.length>1?"s":""} available.`};return optionsToDisplay.length<1&&(newState.statusText="No results."),disableFiltering||!state.selectedOption?newState.focusedOption=closestMatch:state.selectedOption&&(newState.filteredOptions.includes(state.selectedOption)?newState.focusedOption=state.selectedOption:newState.focusedOption=closestMatch),newState}case ActionTypes.OPEN_LIST:{const statusText=state.filteredOptions.length?`${state.filteredOptions.length} result${state.filteredOptions.length>1?"s":""} available.`:"No results.";return{...state,isOpen:!0,focusMode:FocusMode.Input,focusedOption:state.selectedOption||state.focusedOption||optionsList[0],statusText:statusText}}case ActionTypes.CLOSE_LIST:{const newState={...state,isOpen:!1,focusMode:FocusMode.Input,focusedOption:void 0,statusText:""};return 0===state.filteredOptions.length&&(newState.filteredOptions=optionsList,newState.inputValue=""),state.selectedOption&&(newState.inputValue=state.selectedOption.label),newState}case ActionTypes.FOCUS_OPTION:{const statusText=state.filteredOptions.length?`${state.filteredOptions.length} result${state.filteredOptions.length>1?"s":""} available.`:"No results.";return{...state,isOpen:!0,focusedOption:action.option,focusMode:FocusMode.Item,statusText:statusText}}case ActionTypes.CLEAR:return{...state,inputValue:"",isOpen:!1,focusMode:FocusMode.Input,selectedOption:void 0,filteredOptions:optionsList,focusedOption:optionsList[0],statusText:""};case ActionTypes.BLUR:{const newState={...state,isOpen:!1,focusMode:FocusMode.None,filteredOptions:optionsList,statusText:""};return state.selectedOption?(newState.inputValue=state.selectedOption.label,newState.focusedOption=state.selectedOption):(newState.inputValue="",newState.focusedOption=optionsList[0]),newState}case ActionTypes.CLEAR_SELECTION:return{...state,inputValue:"",isOpen:!1,focusMode:FocusMode.None,selectedOption:void 0,filteredOptions:optionsList,focusedOption:void 0,statusText:""};case ActionTypes.FOCUS_INPUT:return{...state,focusMode:FocusMode.Input};default:throw new Error}}),initialState)};var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");var Direction=function(Direction){return Direction[Direction.Previous=-1]="Previous",Direction[Direction.Next=1]="Next",Direction}(Direction||{});let FocusMode=function(FocusMode){return FocusMode[FocusMode.None=0]="None",FocusMode[FocusMode.Input=1]="Input",FocusMode[FocusMode.Item=2]="Item",FocusMode}({});const Input=({focused:focused,...inputProps})=>{const inputRef=(0,react.useRef)(null);return(0,react.useEffect)((()=>{focused&&inputRef.current&&inputRef.current.focus()})),(0,jsx_runtime.jsx)("input",{type:"text",...inputProps,className:"usa-combo-box__input","data-testid":"combo-box-input",autoCapitalize:"off",autoComplete:"off",ref:inputRef})};Input.displayName="Input";const ComboBoxForwardRef=({id:id,name:name,className:className,options:options,defaultValue:defaultValue,disabled:disabled,onChange:onChange,assistiveHint:assistiveHint,noResults:noResults,selectProps:selectProps,inputProps:inputProps,ulProps:ulProps,customFilter:customFilter,disableFiltering:disableFiltering=!1},ref)=>{const isDisabled=!!disabled;let defaultOption;defaultValue&&(defaultOption=options.find((opt=>opt.value===defaultValue)));const filter=customFilter||{filter:".*{{query}}.*"},initialState={isOpen:!1,selectedOption:defaultOption||void 0,focusedOption:void 0,focusMode:FocusMode.None,filteredOptions:options,inputValue:defaultOption?defaultOption.label:"",statusText:""},[state,dispatch]=useComboBox(initialState,options,disableFiltering,filter),containerRef=(0,react.useRef)(null),listRef=(0,react.useRef)(null),focusedItemRef=(0,react.useRef)(null);(0,react.useEffect)((()=>{onChange&&onChange(state.selectedOption?.value||void 0)}),[state.selectedOption]),(0,react.useEffect)((()=>{state.focusMode===FocusMode.Item&&state.focusedOption&&focusedItemRef.current&&focusedItemRef.current.focus()}),[state.focusMode,state.focusedOption]),(0,react.useEffect)((()=>{if(state.isOpen&&state.focusedOption&&focusedItemRef.current&&listRef.current&&state.focusMode===FocusMode.Input){const optionBottom=focusedItemRef.current.offsetTop+focusedItemRef.current.offsetHeight;optionBottom>listRef.current.scrollTop+listRef.current.offsetHeight&&(listRef.current.scrollTop=optionBottom-listRef.current.offsetHeight),focusedItemRef.current.offsetTop<listRef.current.scrollTop&&(listRef.current.scrollTop=focusedItemRef.current.offsetTop)}}),[state.isOpen,state.focusedOption]),(0,react.useEffect)((()=>{state.focusMode!==FocusMode.None&&(containerRef.current?.contains(window.document.activeElement)||dispatch({type:ActionTypes.BLUR}))}),[state.focusMode]),(0,react.useImperativeHandle)(ref,(()=>({focus:()=>dispatch({type:ActionTypes.FOCUS_INPUT}),clearSelection:()=>dispatch({type:ActionTypes.CLEAR_SELECTION})})),[]);const focusSibling=(dispatch,state,change)=>{const currentIndex=state.focusedOption?state.filteredOptions.indexOf(state.focusedOption):-1,firstOption=state.filteredOptions[0],lastOption=state.filteredOptions[state.filteredOptions.length-1];if(-1===currentIndex)dispatch({type:ActionTypes.FOCUS_OPTION,option:firstOption});else{const newIndex=currentIndex+change;if(newIndex<0)dispatch({type:ActionTypes.CLOSE_LIST});else if(newIndex>=state.filteredOptions.length)dispatch({type:ActionTypes.FOCUS_OPTION,option:lastOption});else{const newOption=state.filteredOptions[newIndex];dispatch({type:ActionTypes.FOCUS_OPTION,option:newOption})}}},handleListItemBlur=event=>{const{relatedTarget:newTarget}=event;(!newTarget||newTarget instanceof Node&&!containerRef.current?.contains(newTarget))&&dispatch({type:ActionTypes.BLUR})},handleListItemKeyDown=event=>{"Escape"===event.key?dispatch({type:ActionTypes.CLOSE_LIST}):"Tab"===event.key||"Enter"===event.key?(event.preventDefault(),state.focusedOption&&dispatch({type:ActionTypes.SELECT_OPTION,option:state.focusedOption})):"ArrowDown"===event.key||"Down"===event.key?(event.preventDefault(),focusSibling(dispatch,state,Direction.Next)):"ArrowUp"!==event.key&&"Up"!==event.key||(event.preventDefault(),focusSibling(dispatch,state,Direction.Previous))},isPristine=state.selectedOption&&state.selectedOption.label===state.inputValue,containerClasses=classnames_default()("usa-combo-box",className,{"usa-combo-box--pristine":isPristine}),listID=`${id}--list`,assistiveHintID=`${id}--assistiveHint`,focusedItemIndex=state.focusedOption?state.filteredOptions.findIndex((i=>i===state.focusedOption)):-1,focusedItemId=focusedItemIndex>-1&&`${listID}--option-${focusedItemIndex}`;return(0,jsx_runtime.jsxs)("div",{"data-testid":"combo-box","data-enhanced":"true",className:containerClasses,ref:containerRef,children:[(0,jsx_runtime.jsx)("select",{...selectProps,className:"usa-select usa-sr-only usa-combo-box__select",name:name,"aria-hidden":!0,tabIndex:-1,defaultValue:state.selectedOption?.value,"data-testid":"combo-box-select",children:options.map((option=>(0,jsx_runtime.jsx)("option",{value:option.value,children:option.label},option.value)))}),(0,jsx_runtime.jsx)(Input,{...inputProps,role:"combobox",onChange:e=>{inputProps?.onChange&&inputProps?.onChange(e),dispatch({type:ActionTypes.UPDATE_FILTER,value:e.target.value})},onClick:()=>dispatch({type:ActionTypes.OPEN_LIST}),onBlur:event=>{const{relatedTarget:newTarget}=event;(!newTarget||newTarget instanceof Node&&!containerRef.current?.contains(newTarget))&&state.focusMode!==FocusMode.None&&dispatch({type:ActionTypes.BLUR})},onKeyDown:event=>{if("Escape"===event.key)dispatch({type:ActionTypes.CLOSE_LIST});else if("ArrowDown"===event.key||"Down"==event.key)event.preventDefault(),dispatch({type:ActionTypes.FOCUS_OPTION,option:state.selectedOption||state.focusedOption||state.filteredOptions[0]});else if("Tab"===event.key){if(state.isOpen&&!state.selectedOption){const optionToFocus=disableFiltering?state.focusedOption:state.selectedOption||state.focusedOption;optionToFocus?(event.preventDefault(),dispatch({type:ActionTypes.FOCUS_OPTION,option:optionToFocus})):dispatch({type:ActionTypes.BLUR})}!state.isOpen&&state.selectedOption&&dispatch({type:ActionTypes.BLUR})}else if("Enter"===event.key&&state.isOpen){event.preventDefault();const exactMatch=state.filteredOptions.find((option=>option.label.toLowerCase()===state.inputValue.toLowerCase()));exactMatch?dispatch({type:ActionTypes.SELECT_OPTION,option:exactMatch}):state.selectedOption?dispatch({type:ActionTypes.CLOSE_LIST}):dispatch({type:ActionTypes.CLEAR})}},value:state.inputValue,focused:state.focusMode===FocusMode.Input,"aria-owns":listID,"aria-controls":listID,"aria-autocomplete":"list","aria-describedby":assistiveHintID,"aria-expanded":state.isOpen,"aria-activedescendant":state.isOpen&&focusedItemId||"",id:id,disabled:isDisabled}),(0,jsx_runtime.jsx)("span",{className:"usa-combo-box__clear-input__wrapper",tabIndex:-1,children:(0,jsx_runtime.jsx)("button",{type:"button",className:"usa-combo-box__clear-input","aria-label":"Clear the select contents",onClick:()=>dispatch({type:ActionTypes.CLEAR}),"data-testid":"combo-box-clear-button",onKeyDown:event=>{"Tab"===event.key&&state.isOpen&&state.selectedOption&&(event.preventDefault(),dispatch({type:ActionTypes.FOCUS_OPTION,option:state.selectedOption}))},hidden:!isPristine||isDisabled,disabled:isDisabled,children:" "})}),(0,jsx_runtime.jsx)("span",{className:"usa-combo-box__input-button-separator",children:" "}),(0,jsx_runtime.jsx)("span",{className:"usa-combo-box__toggle-list__wrapper",tabIndex:-1,children:(0,jsx_runtime.jsx)("button",{"data-testid":"combo-box-toggle",type:"button",className:"usa-combo-box__toggle-list",tabIndex:-1,"aria-label":"Toggle the dropdown list",onClick:()=>dispatch({type:state.isOpen?ActionTypes.CLOSE_LIST:ActionTypes.OPEN_LIST}),disabled:isDisabled,children:" "})}),(0,jsx_runtime.jsxs)("ul",{...ulProps,"data-testid":"combo-box-option-list",tabIndex:-1,id:listID,className:"usa-combo-box__list",role:"listbox",ref:listRef,hidden:!state.isOpen,children:[state.filteredOptions.map(((option,index)=>{const focused=option===state.focusedOption,selected=option===state.selectedOption,itemClasses=classnames_default()("usa-combo-box__list-option",{"usa-combo-box__list-option--focused":focused,"usa-combo-box__list-option--selected":selected});return(0,jsx_runtime.jsx)("li",{ref:focused?focusedItemRef:null,value:option.value,className:itemClasses,tabIndex:focused?0:-1,role:"option","aria-selected":selected,"aria-setsize":state.filteredOptions.length,"aria-posinset":index+1,id:listID+`--option-${index}`,onKeyDown:handleListItemKeyDown,onBlur:handleListItemBlur,"data-testid":`combo-box-option-${option.value}`,"data-value":option.value,onMouseEnter:()=>dispatch({type:ActionTypes.FOCUS_OPTION,option:option}),onClick:()=>{dispatch({type:ActionTypes.SELECT_OPTION,option:option})},children:option.label},option.value)})),0===state.filteredOptions.length?(0,jsx_runtime.jsx)("li",{className:"usa-combo-box__list-option--no-results",children:noResults||"No results found"}):null]}),(0,jsx_runtime.jsx)("div",{className:"usa-combo-box__status usa-sr-only",role:"status",children:state.statusText}),(0,jsx_runtime.jsx)("span",{id:assistiveHintID,className:"usa-sr-only","data-testid":"combo-box-assistive-hint",children:assistiveHint||"When autocomplete results are available use up and down arrows to review\n           and enter to select. Touch device users, explore by touch or with swipe\n           gestures."})]})};ComboBoxForwardRef.displayName="ComboBoxForwardRef";const ComboBox=(0,react.forwardRef)(ComboBoxForwardRef);try{ComboBox.displayName="ComboBox",ComboBox.__docgenInfo={description:"",displayName:"ComboBox",props:{id:{defaultValue:null,description:"",name:"id",required:!0,type:{name:"string"}},name:{defaultValue:null,description:"",name:"name",required:!0,type:{name:"string"}},className:{defaultValue:null,description:"",name:"className",required:!1,type:{name:"string | undefined"}},options:{defaultValue:null,description:"",name:"options",required:!0,type:{name:"ComboBoxOption[]"}},defaultValue:{defaultValue:null,description:"",name:"defaultValue",required:!1,type:{name:"string | undefined"}},disabled:{defaultValue:null,description:"",name:"disabled",required:!1,type:{name:"boolean | undefined"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(val?: string | undefined) => void"}},assistiveHint:{defaultValue:null,description:"",name:"assistiveHint",required:!1,type:{name:"string | undefined"}},noResults:{defaultValue:null,description:"",name:"noResults",required:!1,type:{name:"string | undefined"}},inputProps:{defaultValue:null,description:"",name:"inputProps",required:!1,type:{name:"DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement> | undefined"}},selectProps:{defaultValue:null,description:"",name:"selectProps",required:!1,type:{name:"DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement> | undefined"}},ulProps:{defaultValue:null,description:"",name:"ulProps",required:!1,type:{name:"DetailedHTMLProps<HTMLAttributes<HTMLUListElement>, HTMLUListElement> | undefined"}},customFilter:{defaultValue:null,description:"",name:"customFilter",required:!1,type:{name:"CustomizableFilter | undefined"}},disableFiltering:{defaultValue:{value:"false"},description:"",name:"disableFiltering",required:!1,type:{name:"boolean | undefined"}},ref:{defaultValue:null,description:"Allows getting a ref to the component instance.\nOnce the component unmounts, React will set `ref.current` to `null` (or call the ref with `null` if you passed a callback ref).\n@see https://react.dev/learn/referencing-values-with-refs#refs-and-the-dom",name:"ref",required:!1,type:{name:"Ref<ComboBoxRef> | undefined"}},key:{defaultValue:null,description:"",name:"key",required:!1,type:{name:"Key | null | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/forms/ComboBox/ComboBox.tsx#ComboBox"]={docgenInfo:ComboBox.__docgenInfo,name:"ComboBox",path:"src/components/forms/ComboBox/ComboBox.tsx#ComboBox"})}catch(__react_docgen_typescript_loader_error){}}}]);